generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    relationMode      = "prisma" // prisma relation mode is required by PlanetScale
}

model Country {
    cca2             String             @id @db.VarChar(2)
    cca3             String             @db.VarChar(3)
    ccn3             String?            @db.VarChar(3)
    nameCommon       String
    nameOfficial     String
    region           String
    subregion        String?
    flagPng          String
    cities           City[]
    TripDestinations TripDestinations[]
}

model City {
    id               String       @id
    name             String
    alternateNames   String?      @db.Text
    countryCode      String       @db.VarChar(2)
    admin1Code       String?
    admin2Code       String?
    admin3Code       String?
    admin4Code       String?
    modificationDate DateTime     @db.Date
    population       Int?
    latitude         Float
    longitude        Float
    country          Country      @relation(fields: [countryCode], references: [cca2])
    Attraction       Attraction[]

    @@index([countryCode])
}

model Attraction {
    id             String           @id @default(cuid())
    name           String
    nameLocal      String?
    description    String?          @db.Text
    address        String?
    latitude       Float            @default(0)
    longitude      Float            @default(0)
    isMustSee      Boolean          @default(false)
    isPredefined   Boolean          @default(false)
    originalUri    String?
    cityId         String
    city           City             @relation(fields: [cityId], references: [id])
    oldId          Int?
    ItineraryPlace ItineraryPlace[]

    @@index([cityId])
}

model Trip {
    id           String             @id @default(cuid())
    name         String
    startDate    DateTime?
    endDate      DateTime?
    destinations TripDestinations[]
    oldId        Int?
    Itinerary    Itinerary[]
}

model TripDestinations {
    trip      Trip    @relation(fields: [tripId], references: [id])
    tripId    String
    country   Country @relation(fields: [countryId], references: [cca2])
    countryId String

    @@id([tripId, countryId])
    @@unique([tripId, countryId])
    @@index([tripId])
    @@index([countryId])
}

model Itinerary {
    id      String           @id @default(cuid())
    name    String
    trip    Trip             @relation(fields: [tripId], references: [id])
    tripId  String
    order   Int
    places  ItineraryPlace[]
    colorId Int
    color   Color            @relation(fields: [colorId], references: [id])

    @@index([tripId])
    @@index([colorId])
}

model ItineraryPlace {
    id           String     @id @default(cuid())
    itinerary    Itinerary  @relation(fields: [itineraryId], references: [id])
    itineraryId  String
    attraction   Attraction @relation(fields: [attractionId], references: [id])
    attractionId String
    order        Int

    @@unique([itineraryId, attractionId])
    @@index([itineraryId])
    @@index([attractionId])
}

model Color {
    id        Int         @id @default(autoincrement())
    name      String
    Itinerary Itinerary[]
}
